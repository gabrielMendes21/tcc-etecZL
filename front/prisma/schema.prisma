// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model Escola {
  id         Int    @id @default(autoincrement()) @map("codEscola")
  nomeEscola String

  Usuario Usuario[]
}

model Usuario {
  id              Int     @id @default(autoincrement()) @map("codUsuario")
  email           String @unique
  senha           String
  nome            String
  turma           String?
  rm              Int? @unique
  horasConcluidas Int?
  horasAnuais     Int?
  escola          Int?
  tipoUsuario     String

  escolaRel Escola?   @relation(fields: [escola], references: [id])

  Entrega   Entrega[]
  SolicitacaoSuporte SolicitacaoSuporte[]
  Resposta Resposta[]
  Correcao Correcao[]

  @@index([escola])
}

model Atividade {
  id             Int      @id @default(autoincrement()) @map("codAtividade")
  titulo         String
  descricao      String
  tipoAtividade  String
  anexos         String?
  horasAtividade Int
  dataCriacao    DateTime @default(now())
  prazoEntrega   DateTime

  entrega Entrega[]
}

model Entrega {
  id          Int       @id @default(autoincrement()) @map("codEntrega")
  dataEntrega DateTime?
  conteudo    String?
  entregue    Boolean   @default(false)

  aluno    Usuario @relation(fields: [codAluno], references: [id])
  codAluno Int

  atividade    Atividade @relation(fields: [codAtividade], references: [id])
  codAtividade Int

  Correcao Correcao?

  @@index([codAluno])
  @@index([codAtividade])
}

model SolicitacaoSuporte {
  id Int @id @map("codSolicitacao") @default(autoincrement())
  titulo String
  conteudo String
  dataCriacao DateTime @default(now())

  aluno    Usuario @relation(fields: [codAluno], references: [id])
  codAluno Int

  Resposta Resposta?

  @@index([codAluno])
}

model Resposta {
  id Int @id @map("codResposta") @default(autoincrement())
  dataResposta DateTime @default(now())
  resposta String

  coordenador    Usuario @relation(fields: [codCoordenador], references: [id])
  codCoordenador Int

  solicitacaoSuporte SolicitacaoSuporte @relation(fields: [codSolicitacao], references: [id])
  codSolicitacao Int @unique

  @@index([codCoordenador])
  @@index([codSolicitacao])
}

model Correcao {
  id Int @id @map("codCorrecao") @default(autoincrement())
  dataCorrecao DateTime @default(now())
  conteudo String

  coordenador    Usuario @relation(fields: [codCoordenador], references: [id])
  codCoordenador Int

  entrega    Entrega @relation(fields: [codEntrega], references: [id])
  codEntrega Int @unique

  @@index([codEntrega])
  @@index([codCoordenador])
}

// model Coordenador {
//   id              Int    @id @default(autoincrement()) @map("codCoordenador")
//   nome            String
//   email           String @unique
//   senha           String
//   tipoCoordenador String

//   escolaId Int
//   escola   Escola @relation(fields: [escolaId], references: [id])

//   @@index([escolaId])
// }

// model Aluno {
//   id Int @id @map("rm")

//   nome            String
//   email           String @unique
//   senha           String
//   turma           String
//   horasConcluidas Int
//   horasAnuais     Int

//   escolaId Int
//   escola   Escola @relation(fields: [escolaId], references: [id])

//   AlunoAtividade Entrega[]

//   @@index([escolaId])
// }

//   AlunoAtividade Entrega[]

//   @@index([escolaId])
// }

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model Escola {
  id          Int           @id @default(autoincrement()) @map("codEscola")
  nomeEscola  String
  Aluno       Aluno[]
  Coordenador Coordenador[]
}

model Usuario {
  id Int @id @map("codUsuario")
  email String
  senha String
  nome String
  turma String?
  rm Int?
  horasConcluidas Int?
  horasAnuais Int?
  escola Int?
  tipoUsuario String
}

model Aluno {
  id Int @id @map("rm")

  nome            String
  email           String @unique
  senha           String
  turma           String
  horasConcluidas Int
  horasAnuais     Int

  escolaId Int
  escola   Escola @relation(fields: [escolaId], references: [id])

  AlunoAtividade Entrega[]

  @@index([escolaId])
}

model Atividade {
  id             Int       @id @default(autoincrement()) @map("codAtividade")
  titulo         String
  descricao      String
  tipoAtividade  String
  anexos         String
  horasAtividade Int
  dataCriacao    DateTime  @default(now())
  prazoEntrega   DateTime
  AlunoAtividade Entrega[]
}

model Entrega {
  id             Int       @id @default(autoincrement())
  entregue       Boolean   @default(false)
  conteudoEntega String?
  dataEntrega    DateTime?

  aluno   Aluno @relation(fields: [alunoId], references: [id])
  alunoId Int

  atividade   Atividade @relation(fields: [atividadeId], references: [id])
  atividadeId Int

  @@index([alunoId])
  @@index([atividadeId])
}

model Coordenador {
  id              Int    @id @default(autoincrement()) @map("codCoordenador")
  nome            String
  email           String @unique
  senha           String
  tipoCoordenador String

  escolaId Int
  escola   Escola @relation(fields: [escolaId], references: [id])

  @@index([escolaId])
}

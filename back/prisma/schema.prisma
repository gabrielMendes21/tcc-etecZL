// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Escola {
  id          Int           @id @default(autoincrement()) @map("codEscola")
  nomeEscola  String
  Aluno       Aluno[]
  Coordenador Coordenador[]
}

model Aluno {
  id Int @id @map("rm")

  nome            String
  email           String @unique
  senha           String
  turma           String
  horasConcluidas Int
  horasAnuais     Int

  escolaId Int
  escola   Escola @relation(fields: [escolaId], references: [id])

  Entrega            Entrega[]
  SolicitacaoSuporte SolicitacaoSuporte[]
  AlunoAtividade     AlunoAtividade[]
}

model AlunoAtividade {
  id Int @id @default(autoincrement())

  aluno   Aluno @relation(fields: [alunoId], references: [id])
  alunoId Int

  atividade   Atividade @relation(fields: [atividadeId], references: [id])
  atividadeId Int
}

model Entrega {
  id          Int      @id @default(autoincrement())
  dataEntrega DateTime
  anexos      String?

  codAtividade Int
  atividade    Atividade @relation(fields: [codAtividade], references: [id])

  alunoRm Int
  aluno   Aluno @relation(fields: [alunoRm], references: [id])
}

model Atividade {
  id             Int      @id @default(autoincrement()) @map("codAtividade")
  titulo         String
  descricao      String
  tipoAtividade  String
  anexos         String?
  horasAtividade Int
  dataCriacao    DateTime @default(now())
  prazoEntrega   DateTime

  Entrega        Entrega[]
  Correcao       Correcao[]
  AlunoAtividade AlunoAtividade[]
}

model Correcao {
  id           Int      @id @default(autoincrement())
  dataCorrecao DateTime @default(now())

  coordenadorId Int
  coordenador   Coordenador @relation(fields: [coordenadorId], references: [id])

  atividadeId Int
  atividade   Atividade @relation(fields: [atividadeId], references: [id])
}

model SolicitacaoSuporte {
  id          Int      @id @default(autoincrement()) @map("codSolicitacao")
  titulo      String
  mensagem    String
  dataCriacao DateTime @default(now())

  alunoId Int
  aluno   Aluno @relation(fields: [alunoId], references: [id])

  Resposta Resposta[]
}

model Resposta {
  id           Int      @id @default(autoincrement())
  dataResposta DateTime @default(now())
  resposta     String

  coordenadorId Int
  coordenador   Coordenador @relation(fields: [coordenadorId], references: [id])

  solicitacaoSuporteId Int
  solicitacao          SolicitacaoSuporte @relation(fields: [solicitacaoSuporteId], references: [id])
}

model Coordenador {
  id              Int    @id @default(autoincrement()) @map("codCoordenador")
  nome            String
  email           String @unique
  senha           String
  tipoCoordenador String

  escolaId Int
  escola   Escola @relation(fields: [escolaId], references: [id])

  Resposta Resposta[]
  Correcao Correcao[]
}
